#!/usr/bin/env python3
"""Run Home Assistant's hassfest for this integration.

This script downloads the Home Assistant Core repository at the same
version as the ``homeassistant`` package specified in ``requirements.txt``
and executes ``script.hassfest`` from that checkout. Keeping the
checkout in sync with the pinned Home Assistant version ensures the
validation rules match the runtime environment.
"""
from __future__ import annotations

import io
import subprocess
import sys
import tarfile
import tempfile
import urllib.request
from pathlib import Path


def main() -> int:
    """Download and execute Home Assistant's hassfest."""
    try:
        from homeassistant.const import __version__ as ha_version  # type: ignore
    except Exception as exc:  # pragma: no cover - import error path
        print("homeassistant is required to run hassfest", file=sys.stderr)
        raise SystemExit(1) from exc

    version = ha_version
    url = "https://codeload.github.com/home-assistant/core/tar.gz/refs/tags/" + version

    with tempfile.TemporaryDirectory() as tmpdir:
        # Download and extract the specified version of the Home Assistant repo
        with urllib.request.urlopen(url) as response:
            archive = io.BytesIO(response.read())
        with tarfile.open(fileobj=archive, mode="r:gz") as tar:
            tar.extractall(tmpdir)
        repo_dir = Path(tmpdir) / f"core-{version}"

        args = sys.argv[1:]
        # Ensure integration paths are absolute since we run in a temp dir
        for index, arg in enumerate(list(args)):
            if arg == "--integration-path" and index + 1 < len(args):
                args[index + 1] = str(Path(args[index + 1]).resolve())
            elif arg.startswith("--integration-path="):
                path = arg.split("=", 1)[1]
                args[index] = f"--integration-path={Path(path).resolve()}"

        cmd = [sys.executable, "-m", "script.hassfest", *args]
        return subprocess.call(cmd, cwd=repo_dir)


if __name__ == "__main__":  # pragma: no cover - script entry point
    raise SystemExit(main())
