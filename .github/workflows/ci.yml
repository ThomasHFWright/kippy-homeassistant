name: CI

"on":
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

jobs:
  lint:
    name: Lint and format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-test.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ruff format
        run: ruff format --check .

      - name: Ruff lint
        run: ruff check .

      - name: Pylint
        run: pylint --disable=C,R custom_components/kippy

      - name: Pre-commit hooks
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --show-diff-on-failure

  tests:
    name: Test suite with coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-test.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        env:
          KIPPY_EMAIL: "<REDACTED>"
          KIPPY_PASSWORD: "<REDACTED>"
        run: |
          pytest \
            --cov=custom_components.kippy \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-fail-under=91

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  coverage:
    name: Coverage summary
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: coverage

      - name: Publish coverage summary
        run: |
          python - <<'PY'
          import os
          import xml.etree.ElementTree as ET
          from pathlib import Path

          coverage_path = Path("coverage/coverage.xml")
          if not coverage_path.exists():
              raise SystemExit("coverage.xml not found")

          rate = 0.0
          root = ET.parse(coverage_path).getroot()
          if root.get("line-rate") is not None:
              rate = float(root.get("line-rate")) * 100

          summary_path = Path(os.environ["GITHUB_STEP_SUMMARY"])
          summary_path.write_text(
              f"## Coverage\n\nLine coverage: {rate:.2f}%\n", encoding="utf-8"
          )
          PY
